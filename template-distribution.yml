AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'A template for a CloudFront distribution with a Lambda@Edge function for JWT validation'

Parameters:
  AuthorizerFunctionVersionArn:
    Type: 'String'

Resources:
  ApiFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: './'
      Handler: 'dist/api/index.handler'
      Runtime: 'nodejs20.x'
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 10
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: makefile

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'

  EdgeJwtValidationDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - Id: 'LambdaOrigin'
            DomainName: !Select [2, !Split ['/', !GetAtt ApiFunctionUrl.FunctionUrl]]
            CustomOriginConfig:
              OriginProtocolPolicy: 'https-only'
        DefaultCacheBehavior:
          TargetOriginId: 'LambdaOrigin'
          ViewerProtocolPolicy: 'redirect-to-https'
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: 'none'
            Headers:
              - 'Authorization'
          LambdaFunctionAssociations:
            - EventType: 'origin-request'
              LambdaFunctionARN: !Ref AuthorizerFunctionVersionArn
        CacheBehaviors:
          - PathPattern: '*'
            TargetOriginId: 'LambdaOrigin'
            ViewerProtocolPolicy: 'redirect-to-https'
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
              Headers:
                - 'Authorization'
            LambdaFunctionAssociations:
              - EventType: 'origin-request'
                LambdaFunctionARN: !Ref AuthorizerFunctionVersionArn
        Enabled: true

  LambdaFunctionUrlPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'LambdaFunctionUrlPolicy'
      Roles:
        - !Ref LambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 'lambda:InvokeFunctionUrl'
            Resource: !GetAtt ApiFunctionUrl.FunctionUrl
            Condition:
              StringEquals:
                'aws:Referer': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${EdgeJwtValidationDistribution}'